{"version":3,"sources":["index.js"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","value","Board","_this","Object","C_Users_swath_JavaScripts_tictactoe_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","C_Users_swath_JavaScripts_tictactoe_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_swath_JavaScripts_tictactoe_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","squares","Array","fill","moves","xIsNext","i","slice","calculateWinner","console","log","setState","_this2","handleClick","status","winner","renderSquare","React","Component","Game","lines","length","_lines$i","C_Users_swath_JavaScripts_tictactoe_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"oLAWA,SAASA,EAAOC,GACR,OACAC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASC,QAAUL,EAAMK,SACtCL,EAAMM,WAKXC,cACJ,SAAAA,EAAYP,GAAM,IAAAQ,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IAChBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMX,KACDe,MAAQ,CACXC,QAASC,MAAM,GAAGC,KAAK,MACvBC,MAAO,EACPC,SAAS,GALKZ,2EASNa,GACV,IAAML,EAAUL,KAAKI,MAAMC,QAAQM,QAEhCC,EAAgBP,IAAYA,EAAQK,KAGvCG,QAAQC,IAAId,KAAKI,MAAMI,OACnBR,KAAKI,MAAMI,OAAS,IAIxBH,EAAQK,GAAKV,KAAKI,MAAMK,QAAU,IAAM,IACxCT,KAAKe,SAAS,CACRV,QAASA,EACTG,MAAQR,KAAKI,MAAMI,MAAM,EACzBC,SAAUT,KAAKI,MAAMK,iDAIhBC,GAAG,IAAAM,EAAAhB,KACd,OACEV,EAAAC,EAAAC,cAACJ,EAAD,CACIO,MAASK,KAAKI,MAAMC,QAAQK,GAC5BhB,QAAW,kBAAMsB,EAAKC,YAAYP,uCAMxC,IACIQ,EADGC,EAASP,EAAgBZ,KAAKI,MAAMC,SAU3C,OAPEa,EADElB,KAAKI,MAAMI,OAAQ,EACZ,2BAEHW,EACK,YAAcA,EAEd,kBAAoBnB,KAAKI,MAAMK,QAAU,IAAM,KAG1DnB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUyB,GACzB5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZO,KAAKoB,aAAa,GAClBpB,KAAKoB,aAAa,GAClBpB,KAAKoB,aAAa,IAErB9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZO,KAAKoB,aAAa,GAClBpB,KAAKoB,aAAa,GAClBpB,KAAKoB,aAAa,IAErB9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZO,KAAKoB,aAAa,GAClBpB,KAAKoB,aAAa,GAClBpB,KAAKoB,aAAa,YAjETC,IAAMC,WAwEpBC,mLAEF,OACEjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACI,EAAD,OAEFN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,oBATS6B,IAAMC,WAgBzB,SAASV,EAAgBP,GAYvB,IAXA,IAAMmB,EAAO,CACX,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGDd,EAAG,EAAGA,EAAEc,EAAMC,OAAQf,IAAI,KAAAgB,EAAA5B,OAAA6B,EAAA,EAAA7B,CACjB0B,EAAMd,GADW,GAC1BnB,EAD0BmC,EAAA,GACxBE,EADwBF,EAAA,GACtBG,EADsBH,EAAA,GAEhC,GAAGrB,EAAQd,IAAMc,EAAQd,KAAOc,EAAQuB,IAAOvB,EAAQd,KAAOc,EAAQwB,GAClE,OAAOxB,EAAQd,GAErB,OAAO,KAITuC,IAASC,OACPzC,EAAAC,EAAAC,cAAC+B,EAAD,MACAS,SAASC,eAAe","file":"static/js/main.0f503937.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n/* This file has 3 React componets\r\n    1. Square - the Square component renders a single <button> \r\n    2. Board  -  renders 9 squares.\r\n    3. Game   - renders a board with placeholder values  */\r\n\r\n\r\n//square is function componet - only contain a render method and donâ€™t have their own state\r\nfunction Square(props) {\r\n        return (\r\n        <button className=\"square\" onClick= {props.onClick}>\r\n            {props.value}\r\n        </button>\r\n      );\r\n    }\r\n  \r\n  class Board extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        squares: Array(9).fill(null),\r\n        moves :0,\r\n        xIsNext :true,    //determines the playes or computer's turn\r\n      };\r\n    } \r\n\r\n    handleClick(i){\r\n      const squares = this.state.squares.slice();\r\n      //this.moves.setState() = this.moves.state +1;\r\n      if(calculateWinner(squares) || squares[i]){\r\n        return; \r\n      }\r\n      console.log(this.state.moves);\r\n      if (this.state.moves >= 9){\r\n        return\r\n      }\r\n    \r\n      squares[i] = this.state.xIsNext ? 'X' : 'O'\r\n      this.setState({\r\n            squares: squares,\r\n            moves : this.state.moves+1,\r\n            xIsNext: !this.state.xIsNext,\r\n          });\r\n    }\r\n\r\n    renderSquare(i) {\r\n      return (\r\n        <Square\r\n            value = {this.state.squares[i]}\r\n            onClick = {() => this.handleClick(i)}\r\n        />\r\n      );\r\n    }\r\n  \r\n    render() {\r\n      const  winner = calculateWinner(this.state.squares);\r\n      let status;\r\n      if (this.state.moves >=8){\r\n        status = 'Match is draw, try again';\r\n      }\r\n      else if(winner)\r\n          status = 'Winner:  ' + winner ;\r\n      else\r\n          status = 'Next Player:  ' + (this.state.xIsNext ? 'X' : 'O');\r\n    \r\n      return (\r\n        <div>\r\n          <div className=\"status\">{status}</div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{/* status */}</div>\r\n            <ol>{/* TODO */}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  function calculateWinner(squares){\r\n    const lines =[\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n\r\n    for(let i =0; i<lines.length; i++){\r\n      const[a,b,c] = lines[i];\r\n      if(squares[a] && squares[a] === squares[b] &&  squares[a] === squares[c])\r\n          return squares[a];\r\n    }\r\n    return null;\r\n  }\r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  "],"sourceRoot":""}